name: LottoAI3_HitMatrix_runnerB

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run_group_A:
    runs-on: ubuntu-latest
    timeout-minutes: 330   # ➜ 5.5 小时，自动收工

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30

    strategy:
      matrix:
        playtype: [
          "wanwei_sha1",
          "wanwei_ding3",
          "qianwei_sha1",
          "qianwei_ding3",
          "baiwei_sha1",
          "baiwei_ding3",
          "shiwei_sha1",
          "shiwei_ding3",
          "gewei_sha1",
          "gewei_ding3"
        ]
      max-parallel: 6

    env:
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
      GH_TOKEN: ${{ secrets.PERSONAL_GH_PAT }}

    steps:
      - name: 🕒 Debug Timezone Info
        run: |
          echo "==== 🕒 当前时间 ===="
          echo "UTC: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "Asia/Shanghai: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')"
          echo "====================="

      - name: Set Start Time
        run: |
          echo "start_time=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} --silent; then
              echo "✅ MySQL is ready."
              break
            fi
            echo "⏳ Waiting for MySQL ($i)..."
            sleep 5
          done

      - name: Download 公共库
        run: |
          curl -L -o p5_analysis.zip https://github.com/suwei8/LottoAI3_HitMatrix_date/releases/download/p5/lotto_ai3_v2_p5.sql.zip
          unzip -P ${{ secrets.BACKUP_PASSWORD }} p5_analysis.zip -d data/

      - name: Download 当前玩法库
        run: |
          echo "📦 下载 Tag: p5_${{ matrix.playtype }}"
          curl -L -o tasks.zip https://github.com/suwei8/LottoAI3_HitMatrix_date/releases/download/p5_${{ matrix.playtype }}/lotto_ai3_hitmatrix_p5_${{ matrix.playtype }}.sql.zip
          sleep 1
          unzip -P ${{ secrets.BACKUP_PASSWORD }} tasks.zip -d data/
          ls -lh data/

      - name: Restore MySQL Database
        run: |
          chmod +x scripts/restore_db.sh
          ./scripts/restore_db.sh
          sleep 1

      - name: 🗂️ Debug 打印源表 lottery_results_p5
        run: |
          echo "=== lottery_results_p5 行数 ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "SELECT COUNT(*) FROM lottery_results_p5;"
          
          echo ""
          echo "=== lottery_results_p5 前 5 条 ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "SELECT * FROM lottery_results_p5 LIMIT 5;"

      - name: 🗂️ Debug 打印核心表结构 & 行数
        run: |
          echo "=== 当前数据库所有表 ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "SHOW TABLES;"
          
          echo ""
          echo "=== 表结构: tasks ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "DESCRIBE tasks;"
          
          echo ""
          echo "=== 表结构: best_tasks ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "DESCRIBE best_tasks;"
          
          echo ""
          echo "=== tasks 行数 ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "SELECT COUNT(*) AS total FROM tasks;"
          
          echo ""
          echo "=== best_tasks 行数 ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "SELECT COUNT(*) AS total FROM best_tasks;"
          
          echo ""
          echo "=== tasks 前 5 条 ==="
          mysql -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} -e "SELECT * FROM tasks LIMIT 5;"

      - name: Run All (自动闭环 + 覆盖上传)
        run: |
          python scripts/run_all.py "${{ matrix.playtype }}"

      - name: Calculate Duration
        id: calc_duration
        run: |
          END=$(date +%s)
          duration=$((END - $start_time))
          echo "start_time=$start_time"
          echo "END=$END"
          echo "duration=$duration"
          echo "mins=$((duration / 60))" >> $GITHUB_OUTPUT
          echo "secs=$((duration % 60))" >> $GITHUB_OUTPUT


      - name: Send WeChat Notify
        env:
          WECHAT_API_URL: ${{ secrets.WECHAT_API_URL }}
          WECHAT_API_KEY: ${{ secrets.WECHAT_API_KEY }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          DURATION_MINUTES: ${{ steps.calc_duration.outputs.mins }}
          DURATION_SECONDS: ${{ steps.calc_duration.outputs.secs }}
        run: |
          python scripts/send_notify.py "${{ matrix.playtype }}"
