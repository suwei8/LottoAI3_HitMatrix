name: LottoAI3_HitMatrix_runnerB

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run_group_A:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30

    strategy:
      matrix:
        playtype: [
          "wanwei_sha1",
          "wanwei_ding3",
          "qianwei_sha1",
          "qianwei_ding3",
          "baiwei_sha1",
          "baiwei_ding3",
          "shiwei_sha1",
          "shiwei_ding3",
          "gewei_sha1",
          "gewei_ding3"
        ]
      max-parallel: 6

    env:
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
      GH_TOKEN: ${{ secrets.PERSONAL_GH_PAT }}

    steps:
      - name: 🕒 Debug Timezone Info
        run: |
          echo "==== 🕒 当前时间 ===="
          echo "UTC: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "Asia/Shanghai: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')"
          echo "====================="

      - name: Set Start Time
        run: |
          echo "start_time=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -uroot -p${{ secrets.MYSQL_PASSWORD }} --silent; then
              echo "✅ MySQL is ready."
              break
            fi
            echo "⏳ Waiting for MySQL ($i)..."
            sleep 5
          done

      - name: 📦 下载并还原 P5备份（含进度显示 + 耗时统计）
        run: |
          echo "=============================="
          echo "🎯 开始执行 Download P5分析表 工作流"
          echo "⏱ 开始时间: $(date '+%Y-%m-%d %H:%M:%S')"
          echo "=============================="
          START_TIME=$(date +%s)

          echo "📁 创建目录 & 下载 ZIP"
          mkdir -p data
          curl -L -o data/lotto_p5_backup.zip \
            https://github.com/suwei8/lotto_ai3_v2-Backup_data/releases/download/backup-p5/lotto_p5_backup.zip

          echo "🔓 解压 ZIP"
          sudo apt-get update && sudo apt-get install -y unzip pv
          unzip -P ${{ secrets.BACKUP_PASSWORD }} -d data/ data/lotto_p5_backup.zip

          echo "🚀 恢复数据库（显示导入进度）"
          gunzip -c data/lotto_p5.sql.gz | \
            pv -s $(gzip -l data/lotto_p5.sql.gz | awk 'NR==2 {print $2}') | \
            mysql -h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE

          echo "🧹 清理中间文件"
          rm -rf data/*

          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "=============================="
          echo "✅ 执行完毕：耗时 ${DURATION} 秒（约 $((DURATION / 60)) 分钟）"
          echo "⏱ 结束时间: $(date '+%Y-%m-%d %H:%M:%S')"
          echo "=============================="

      - name: 📥 下载并还原回测任务表（含解压 + 导入数据库）
        run: |
          echo "=============================="
          echo "📦 下载任务 Tag: p5_${{ matrix.playtype }}"
          curl -L -o tasks.zip https://github.com/suwei8/LottoAI3_HitMatrix_date/releases/download/p5_${{ matrix.playtype }}/lotto_ai3_hitmatrix_p5_${{ matrix.playtype }}.sql.zip
          
          echo "🔓 解压任务表（使用密码）"
          unzip -P ${{ secrets.BACKUP_PASSWORD }} tasks.zip -d data/
          
          echo "📁 解压结果如下："
          ls -lh data/
          
          # 自动寻找解压后的 .sql 文件
          SQL_FILE=$(find data/ -name "*.sql" | head -n 1)
          if [ -z "$SQL_FILE" ]; then
            echo "❌ 未找到解压后的 .sql 文件"
            exit 1
          fi
          
          echo "📥 开始导入 SQL 文件: $SQL_FILE"
          mysql -h$MYSQL_HOST -P$MYSQL_PORT -u$MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < "$SQL_FILE"
          
          echo "✅ 数据导入完成"
          echo "=============================="


      - name: Run All (自动闭环 + 覆盖上传)
        run: |
          python scripts/run_all.py "${{ matrix.playtype }}"

      - name: Calculate Duration
        id: calc_duration
        run: |
          END=$(date +%s)
          duration=$((END - $start_time))
          echo "start_time=$start_time"
          echo "END=$END"
          echo "duration=$duration"
          echo "mins=$((duration / 60))" >> $GITHUB_OUTPUT
          echo "secs=$((duration % 60))" >> $GITHUB_OUTPUT


      - name: Send WeChat Notify
        env:
          WECHAT_API_URL: ${{ secrets.WECHAT_API_URL }}
          WECHAT_API_KEY: ${{ secrets.WECHAT_API_KEY }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          DURATION_MINUTES: ${{ steps.calc_duration.outputs.mins }}
          DURATION_SECONDS: ${{ steps.calc_duration.outputs.secs }}
        run: |
          python scripts/send_notify.py "${{ matrix.playtype }}"
